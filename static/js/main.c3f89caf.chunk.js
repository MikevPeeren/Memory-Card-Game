(this["webpackJsonpmemory-card-game"]=this["webpackJsonpmemory-card-game"]||[]).push([[0],{28:function(e){e.exports=JSON.parse('[{"id":1,"cardIcon":"coffee","isFlipped":false},{"id":2,"cardIcon":"coffee","isFlipped":false},{"id":3,"cardIcon":"air-freshener","isFlipped":false},{"id":4,"cardIcon":"air-freshener","isFlipped":false},{"id":5,"cardIcon":"cookie","isFlipped":false},{"id":6,"cardIcon":"cookie","isFlipped":false},{"id":7,"cardIcon":"credit-card","isFlipped":false},{"id":8,"cardIcon":"credit-card","isFlipped":false},{"id":9,"cardIcon":"carrot","isFlipped":false},{"id":10,"cardIcon":"carrot","isFlipped":false},{"id":11,"cardIcon":"coins","isFlipped":false},{"id":12,"cardIcon":"coins","isFlipped":false},{"id":13,"cardIcon":"ambulance","isFlipped":false},{"id":14,"cardIcon":"ambulance","isFlipped":false},{"id":15,"cardIcon":"baby","isFlipped":false},{"id":16,"cardIcon":"baby","isFlipped":false}]')},34:function(e,a,t){e.exports=t(48)},39:function(e,a,t){},45:function(e,a,t){},48:function(e,a,t){"use strict";t.r(a);var r=t(0),i=t.n(r),n=t(19),s=t.n(n),l=t(11),c=t(12),d=t(15),p=t(13),o=t(16),u=t(30),f=t(10),m=(t(39),t(17)),h=t(27),b=t(4),v=t.n(b),F=function(e){function a(){var e,t;Object(l.a)(this,a);for(var r=arguments.length,i=new Array(r),n=0;n<r;n++)i[n]=arguments[n];return(t=Object(d.a)(this,(e=Object(p.a)(a)).call.apply(e,[this].concat(i)))).state={id:null,isFlipped:!1},t.handleClick=function(){if(!t.props.hasBeenMatched)if(t.props.handleClick)t.props.handleClick(t.props.id,t.props.shouldBeFlippable);else{if(!t.props.shouldBeFlippable)return;t.setState((function(e){return e.isFlipped=!e.isFlipped,Object(m.a)({},e)}));var e=document.getElementById(String(t.props.id));e&&(e.classList.contains("flipped")?e.classList.remove("flipped"):e.classList.add("flipped"))}},t}return Object(o.a)(a,e),Object(c.a)(a,[{key:"render",value:function(){var e;if(this.props.isGameCard)this.props.isFlipped&&this.props.cardIcon&&(e=i.a.createElement("div",{className:"card-div"},i.a.createElement(h.a,{className:v()("card-icon"),icon:this.props.cardIcon})));else if(this.state.isFlipped)e=i.a.createElement("div",{className:"card-text back card-active"},this.props.backText);else{var a=v()("card-text front",this.props.frontClassName);e=i.a.createElement("div",{className:a},this.props.frontText)}return i.a.createElement("div",{id:String(this.props.id),onClick:this.handleClick,className:v()(this.props.cardClassName)},e)}}]),a}(r.Component);F.defaultProps={id:null,cardClassName:null,frontText:null,backText:null,shouldBeFlippable:!0,frontClassName:null,isGameCard:!1,cardIcon:void 0,checkFlippedCards:void 0,handleClick:void 0,isFlipped:!1,hasBeenMatched:!1};var g=F,y=function(){return i.a.createElement("div",{className:"card-container"},i.a.createElement("p",{className:"info"},"Click the P to get started!"),i.a.createElement(g,{key:1,id:1,cardClassName:"card left",shouldBeFlippable:!0,isFlipped:!1,frontText:"F",backText:"A Memory Card Game"}),i.a.createElement(g,{key:2,id:2,cardClassName:"card left",frontClassName:"card-active",shouldBeFlippable:!1,isFlipped:!1,frontText:"L",backText:"This is a Memory Card Game"}),i.a.createElement(g,{key:3,id:3,cardClassName:"card",shouldBeFlippable:!0,isFlipped:!1,frontText:"I",backText:i.a.createElement("div",{className:"instructions"},i.a.createElement("h2",null,"Instructions"),i.a.createElement("p",null,"This is a timed card memory game. Click the green cards to see what symbol they uncover and try to find the matching symbol underneath the other cards."))}),i.a.createElement(g,{key:4,id:4,cardClassName:"card",shouldBeFlippable:!0,isFlipped:!1,frontText:"P",backText:i.a.createElement("div",{className:"playgame"},i.a.createElement("a",{href:"/Memory-Card-Game/new-game",className:"play"},"Play"))}))},C=(t(45),t(33)),k=t(24),E=t(28),I=function(e){function a(e){var t;return Object(l.a)(this,a),(t=Object(d.a)(this,Object(p.a)(a).call(this,e))).state={flippableSquares:[],flippedSquares:[],progressBarValue:0},t.handleClick=function(e,a){a&&(t.setState((function(a){var r=a.flippableSquares,i=a.flippedSquares,n=r.find((function(a){return a.id===e}));if(n)return n.isFlipped=!n.isFlipped,t.flipCard(n.id,n),n.isFlipped&&i.push(n.id),Object(m.a)({},a,{flippableSquares:r,flippedSquares:i})})),setTimeout((function(){t.handleFlippedCards()}),1337))},t.handleFlippedCards=function(){t.setState((function(e){var a=e.flippableSquares,r=e.flippedSquares;if(r.length>2)t.checkFlippableSquares(e);else{var i=a.find((function(e){return e.id===r[0]})),n=a.find((function(e){return e.id===r[1]}));if(!i||!n)return;i.cardIcon===n.cardIcon?(i.hasBeenMatched=!0,n.hasBeenMatched=!0):t.checkFlippableSquares(e)}return r.length=0,Object(m.a)({},e,{flippableSquares:a,flippedSquares:r})}))},t.checkFlippableSquares=function(e){var a=e.flippableSquares;e.flippedSquares.forEach((function(e){var r=a.find((function(a){return a.id===e}));r.isFlipped=!r.isFlipped,t.flipCard(r.id,r)}))},t.flipCard=function(e,a){if(!a.hasBeenMatched){var t=document.getElementById(String(e));t&&(t.classList.contains("flipped")?t.classList.remove("flipped"):t.classList.add("flipped"))}},t.state={flippableSquares:E,flippedSquares:[],progressBarValue:0},t}return Object(o.a)(a,e),Object(c.a)(a,[{key:"componentDidMount",value:function(){var e=this;setInterval((function(){return e.updateProgressBar()}),1e3)}},{key:"updateProgressBar",value:function(){this.setState((function(e){var a=e.progressBarValue;if(a>=100){var t=document.getElementById("game-over");t&&t.classList.remove("game-over-display"),e.flippableSquares=[]}else a=e.progressBarValue+5;return{progressBarValue:a}}))}},{key:"render",value:function(){var e=this;if(this.state.flippableSquares){var a=this.state.flippableSquares.map((function(a){return i.a.createElement(g,{key:a.id,id:a.id,cardClassName:"card-new-game",cardIcon:a.cardIcon,shouldBeFlippable:!0,isGameCard:!0,isFlipped:a.isFlipped,handleClick:e.handleClick,hasBeenMatched:a.hasBeenMatched})}));return i.a.createElement("div",{className:"card-container-new-game"},i.a.createElement(k.a,{id:"game-over",className:"game-over game-over-display",variant:"danger"},i.a.createElement(k.a.Heading,null,"Game Over"),i.a.createElement("p",{className:"mb-0"},i.a.createElement("br",null),"You did not complete the game within the given time period. Please try again, by refreshing. :)")),i.a.createElement(C.a,{className:"progressbar",variant:"warning",now:this.state.progressBarValue}),a)}}}]),a}(r.Component),S=function(){return i.a.createElement(I,null)},B=t(7),N=t(9);B.b.add(N.e),B.b.add(N.a),B.b.add(N.c),B.b.add(N.b),B.b.add(N.f),B.b.add(N.d),B.b.add(N.h),B.b.add(N.g);var q=function(e){function a(){return Object(l.a)(this,a),Object(d.a)(this,Object(p.a)(a).apply(this,arguments))}return Object(o.a)(a,e),Object(c.a)(a,[{key:"render",value:function(){return i.a.createElement("div",null,i.a.createElement(u.a,{basename:"".concat("/Memory-Card-Game","/")},i.a.createElement(f.c,null,i.a.createElement(f.a,{exact:!0,path:"/",component:y}),i.a.createElement(f.a,{exact:!0,path:"/new-game",component:S}))))}}]),a}(i.a.Component);s.a.render(i.a.createElement(q,null),document.getElementById("root"))}},[[34,1,2]]]);
//# sourceMappingURL=main.c3f89caf.chunk.js.map