(this["webpackJsonpmemory-card-game"]=this["webpackJsonpmemory-card-game"]||[]).push([[0],{29:function(e){e.exports=JSON.parse('[{"id":1,"cardIcon":"coffee","isFlipped":false},{"id":2,"cardIcon":"coffee","isFlipped":false},{"id":3,"cardIcon":"air-freshener","isFlipped":false},{"id":4,"cardIcon":"air-freshener","isFlipped":false},{"id":5,"cardIcon":"cookie","isFlipped":false},{"id":6,"cardIcon":"cookie","isFlipped":false},{"id":7,"cardIcon":"credit-card","isFlipped":false},{"id":8,"cardIcon":"credit-card","isFlipped":false},{"id":9,"cardIcon":"carrot","isFlipped":false},{"id":10,"cardIcon":"carrot","isFlipped":false},{"id":11,"cardIcon":"coins","isFlipped":false},{"id":12,"cardIcon":"coins","isFlipped":false},{"id":13,"cardIcon":"ambulance","isFlipped":false},{"id":14,"cardIcon":"ambulance","isFlipped":false},{"id":15,"cardIcon":"baby","isFlipped":false},{"id":16,"cardIcon":"baby","isFlipped":false}]')},32:function(e,a,t){e.exports=t(46)},37:function(e,a,t){},45:function(e,a,t){},46:function(e,a,t){"use strict";t.r(a);var r=t(0),i=t.n(r),n=t(18),l=t.n(n),s=t(11),c=t(12),d=t(14),p=t(15),o=t(19),u=t(4),f=(t(37),t(16)),m=t(27),h=t(5),b=t.n(h),v=function(e){Object(p.a)(t,e);var a=Object(d.a)(t);function t(){var e;Object(s.a)(this,t);for(var r=arguments.length,i=new Array(r),n=0;n<r;n++)i[n]=arguments[n];return(e=a.call.apply(a,[this].concat(i))).state={id:null,isFlipped:!1},e.handleClick=function(){if(!e.props.hasBeenMatched)if(e.props.handleClick)e.props.handleClick(e.props.id,e.props.shouldBeFlippable);else{if(!e.props.shouldBeFlippable)return;e.setState((function(e){return e.isFlipped=!e.isFlipped,Object(f.a)({},e)}));var a=document.getElementById(String(e.props.id));a&&(a.classList.contains("flipped")?a.classList.remove("flipped"):a.classList.add("flipped"))}},e}return Object(c.a)(t,[{key:"render",value:function(){var e;if(this.props.isGameCard)this.props.isFlipped&&this.props.cardIcon&&(e=i.a.createElement("div",{className:"card-div"},i.a.createElement(m.a,{className:b()("card-icon"),icon:this.props.cardIcon})));else if(this.state.isFlipped)e=i.a.createElement("div",{className:"card-text back card-active"},this.props.backText);else{var a=b()("card-text front",this.props.frontClassName);e=i.a.createElement("div",{className:a},this.props.frontText)}return(i.a.createElement("div",{id:String(this.props.id),onClick:this.handleClick,className:b()(this.props.cardClassName)},e))}}]),t}(r.Component);v.defaultProps={id:null,cardClassName:null,frontText:null,backText:null,shouldBeFlippable:!0,frontClassName:null,isGameCard:!1,cardIcon:void 0,checkFlippedCards:void 0,handleClick:void 0,isFlipped:!1,hasBeenMatched:!1};var F=v,g=function(){return i.a.createElement("div",{className:"card-container"},i.a.createElement("p",{className:"info"},"Click the P to get started!"),i.a.createElement(F,{key:1,id:1,cardClassName:"card left",shouldBeFlippable:!0,isFlipped:!1,frontText:"F",backText:"A Memory Card Game"}),i.a.createElement(F,{key:2,id:2,cardClassName:"card left",frontClassName:"card-active",shouldBeFlippable:!1,isFlipped:!1,frontText:"L",backText:"This is a Memory Card Game"}),i.a.createElement(F,{key:3,id:3,cardClassName:"card",shouldBeFlippable:!0,isFlipped:!1,frontText:"I",backText:i.a.createElement("div",{className:"instructions"},i.a.createElement("h2",null,"Instructions"),i.a.createElement("p",null,"This is a timed card memory game. Click the green cards to see what symbol they uncover and try to find the matching symbol underneath the other cards."))}),i.a.createElement(F,{key:4,id:4,cardClassName:"card",shouldBeFlippable:!0,isFlipped:!1,frontText:"P",backText:i.a.createElement("div",{className:"playgame"},i.a.createElement(o.b,{className:"play",to:"/new-game"},"Play"))}))},k=(t(45),t(31)),y=t(24),C=t(29),E=function(e){Object(p.a)(t,e);var a=Object(d.a)(t);function t(e){var r;return Object(s.a)(this,t),(r=a.call(this,e)).state={flippableSquares:[],flippedSquares:[],progressBarValue:0},r.handleClick=function(e,a){a&&(r.setState((function(a){var t=a.flippableSquares,i=a.flippedSquares,n=t.find((function(a){return a.id===e}));if(n)return n.isFlipped=!n.isFlipped,r.flipCard(n.id,n),n.isFlipped&&i.push(n.id),Object(f.a)({},a,{flippableSquares:t,flippedSquares:i})})),setTimeout((function(){r.handleFlippedCards()}),1337))},r.handleFlippedCards=function(){r.setState((function(e){var a=e.flippableSquares,t=e.flippedSquares;if(t.length>2)r.checkFlippableSquares(e);else{var i=a.find((function(e){return e.id===t[0]})),n=a.find((function(e){return e.id===t[1]}));if(!i||!n)return;i.cardIcon===n.cardIcon?(i.hasBeenMatched=!0,n.hasBeenMatched=!0):r.checkFlippableSquares(e)}return t.length=0,Object(f.a)({},e,{flippableSquares:a,flippedSquares:t})}))},r.checkFlippableSquares=function(e){var a=e.flippableSquares;e.flippedSquares.forEach((function(e){var t=a.find((function(a){return a.id===e}));t.isFlipped=!t.isFlipped,r.flipCard(t.id,t)}))},r.flipCard=function(e,a){if(!a.hasBeenMatched){var t=document.getElementById(String(e));t&&(t.classList.contains("flipped")?t.classList.remove("flipped"):t.classList.add("flipped"))}},r.state={flippableSquares:C,flippedSquares:[],progressBarValue:0},r}return Object(c.a)(t,[{key:"componentDidMount",value:function(){var e=this;setInterval((function(){return e.updateProgressBar()}),1e3)}},{key:"updateProgressBar",value:function(){this.setState((function(e){var a=e.progressBarValue;if(a>=100){var t=document.getElementById("game-over");t&&t.classList.remove("game-over-display"),e.flippableSquares=[]}else a=e.progressBarValue+5;return{progressBarValue:a}}))}},{key:"render",value:function(){var e=this;if(this.state.flippableSquares){var a=this.state.flippableSquares.map((function(a){return i.a.createElement(F,{key:a.id,id:a.id,cardClassName:"card-new-game",cardIcon:a.cardIcon,shouldBeFlippable:!0,isGameCard:!0,isFlipped:a.isFlipped,handleClick:e.handleClick,hasBeenMatched:a.hasBeenMatched})}));return(i.a.createElement("div",{className:"card-container-new-game"},i.a.createElement(y.a,{id:"game-over",className:"game-over game-over-display",variant:"danger"},i.a.createElement(y.a.Heading,null,"Game Over"),i.a.createElement("p",{className:"mb-0"},i.a.createElement("br",null),"You did not complete the game within the given time period. Please try again, by refreshing. :)")),i.a.createElement(k.a,{className:"progressbar",variant:"warning",now:this.state.progressBarValue}),a))}}}]),t}(r.Component),I=function(){return i.a.createElement(E,null)},S=t(8),B=t(10);S.b.add(B.e),S.b.add(B.a),S.b.add(B.c),S.b.add(B.b),S.b.add(B.f),S.b.add(B.d),S.b.add(B.h),S.b.add(B.g);var N=function(e){Object(p.a)(t,e);var a=Object(d.a)(t);function t(){return Object(s.a)(this,t),a.apply(this,arguments)}return Object(c.a)(t,[{key:"render",value:function(){return i.a.createElement("div",null,i.a.createElement(o.a,{basename:"/Memory-Card-Game"},i.a.createElement(u.c,null,i.a.createElement(u.a,{exact:!0,path:"/",component:g}),i.a.createElement(u.a,{exact:!0,path:"/new-game",component:I}))))}}]),t}(i.a.Component);l.a.render(i.a.createElement(N,null),document.getElementById("root"))}},[[32,1,2]]]);
//# sourceMappingURL=main.84c36f0f.chunk.js.map